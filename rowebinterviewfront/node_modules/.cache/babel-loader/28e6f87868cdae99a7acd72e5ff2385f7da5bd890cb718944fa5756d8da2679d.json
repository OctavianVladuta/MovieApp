{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Octavian Vladuta\\\\rowebinterviewfront\\\\src\\\\components\\\\Comments.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { postComment } from \"../api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Comments({\n  movieId\n}) {\n  _s();\n  const [commentText, setCommentText] = useState(\"\");\n  const [comments, setComments] = useState([]);\n  const token = localStorage.getItem(\"token\");\n  useEffect(() => {\n    async function fetchComments() {\n      try {\n        const response = await fetch(`https://localhost:7022/api/comments/${movieId}`);\n        if (!response.ok) {\n          throw new Error(\"Eroare la preluarea comentariilor\");\n        }\n        const data = await response.json();\n        setComments(data);\n      } catch (err) {\n        console.error(err);\n      }\n    }\n    fetchComments();\n  }, [movieId]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!token) {\n      alert(\"Trebuie să fii logat pentru a posta un comentariu.\");\n      return;\n    }\n    try {\n      await postComment({\n        movieId,\n        text: commentText\n      });\n      setCommentText(\"\");\n      // reincarcam lista de comentarii\n      const response = await fetch(`https://localhost:7022/api/comments/${movieId}`);\n      const data = await response.json();\n      setComments(data);\n    } catch (error) {\n      console.error(\"Eroare la postarea comentariului:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mt-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Comentarii\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), comments.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Nu exist\\u0103 comentarii \\xEEnc\\u0103.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"list-group mb-3\",\n      children: comments.map(c => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"list-group-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [c.userName, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 15\n        }, this), \" \", c.text, /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-muted\",\n          style: {\n            fontSize: \"0.8rem\"\n          },\n          children: new Date(c.createdAt).toLocaleString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 15\n        }, this)]\n      }, c.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this), token ? /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"form-control\",\n          value: commentText,\n          onChange: e => setCommentText(e.target.value),\n          placeholder: \"Scrie un comentariu...\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        children: \"Posteaz\\u0103 comentariul\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-danger\",\n      children: \"Trebuie s\\u0103 fii logat pentru a posta comentarii.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_s(Comments, \"20AbPX0f4cMVzLp26IQhgs0wHAI=\");\n_c = Comments;\nexport default Comments;\nvar _c;\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"names":["React","useEffect","useState","postComment","jsxDEV","_jsxDEV","Comments","movieId","_s","commentText","setCommentText","comments","setComments","token","localStorage","getItem","fetchComments","response","fetch","ok","Error","data","json","err","console","error","handleSubmit","e","preventDefault","alert","text","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","c","userName","style","fontSize","Date","createdAt","toLocaleString","id","onSubmit","value","onChange","target","placeholder","required","type","_c","$RefreshReg$"],"sources":["C:/Users/Octavian Vladuta/rowebinterviewfront/src/components/Comments.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { postComment } from \"../api\";\r\n\r\nfunction Comments({ movieId }) {\r\n  const [commentText, setCommentText] = useState(\"\");\r\n  const [comments, setComments] = useState([]);\r\n  const token = localStorage.getItem(\"token\");\r\n\r\n  useEffect(() => {\r\n    async function fetchComments() {\r\n      try {\r\n        const response = await fetch(`https://localhost:7022/api/comments/${movieId}`);\r\n        if (!response.ok) {\r\n          throw new Error(\"Eroare la preluarea comentariilor\");\r\n        }\r\n        const data = await response.json();\r\n        setComments(data);\r\n      } catch (err) {\r\n        console.error(err);\r\n      }\r\n    }\r\n    fetchComments();\r\n  }, [movieId]);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (!token) {\r\n      alert(\"Trebuie să fii logat pentru a posta un comentariu.\");\r\n      return;\r\n    }\r\n    try {\r\n      await postComment({ movieId, text: commentText});\r\n      setCommentText(\"\");\r\n      // reincarcam lista de comentarii\r\n      const response = await fetch(`https://localhost:7022/api/comments/${movieId}`);\r\n      const data = await response.json();\r\n      setComments(data);\r\n    } catch (error) {\r\n      console.error(\"Eroare la postarea comentariului:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"mt-4\">\r\n      <h4>Comentarii</h4>\r\n      {comments.length === 0 ? (\r\n        <p>Nu există comentarii încă.</p>\r\n      ) : (\r\n        <ul className=\"list-group mb-3\">\r\n          {comments.map((c) => (\r\n            <li key={c.id} className=\"list-group-item\">\r\n              <strong>{c.userName}:</strong> {c.text}\r\n              <div className=\"text-muted\" style={{ fontSize: \"0.8rem\" }}>\r\n                {new Date(c.createdAt).toLocaleString()}\r\n              </div>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n\r\n      {token ? (\r\n        <form onSubmit={handleSubmit}>\r\n          <div className=\"mb-3\">\r\n            <textarea\r\n              className=\"form-control\"\r\n              value={commentText}\r\n              onChange={(e) => setCommentText(e.target.value)}\r\n              placeholder=\"Scrie un comentariu...\"\r\n              required\r\n            />\r\n          </div>\r\n          <button type=\"submit\" className=\"btn btn-primary\">\r\n            Postează comentariul\r\n          </button>\r\n        </form>\r\n      ) : (\r\n        <p className=\"text-danger\">Trebuie să fii logat pentru a posta comentarii.</p>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Comments;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}